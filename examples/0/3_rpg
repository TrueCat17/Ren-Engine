РПГ-функции.


В этой части рассказывается об управлении локациями и персонажами в RPG-игре.
Если у вас игра другого стиля, то (скорее всего) вам не понадобится абсолютно ничего из того, что здесь описывается.


Все указанные здесь функции написаны на питоне и использоваться могут только в нём.
Если имя аргумента функции указано в кавычках, то функция ожидает, что этот аргумент будет строкой.


Игра заканчивается, когда выполнены все команды стартовой метки (в том числе все команды запущеных из неё меток).


Локация и персонажи отображаются всегда на самом дальнем плане.
Следовательно, bg и cg всегда закрывают локацию и персонажей, если существуют.


Переключение между локациями:
$ set_location("location_name", "place_name")
Где place_name - имя места в локации location_name.
Перед показом новой локации удаляются все объекты, добавленные функцией set_map_object и автоматически добавляется ГГ (me, Семён) в место place_name.

Скрытие локации:
$ hide_location()

Регистрация локации:
register_location("location_name", "path_to_images", "no_pictures")
Где location_name - имя локации,
    path_to_images - путь к каталогу с картинками (png) локаций (относительно каталога мода),
    	Имена этих картинок:
    		main.png - основное изображение,
    		over.png - изображение с тем, что находится сверху и под чем персонажи могут проходить,
    			Может отсутствовать.
    		free.png - изображение, где доступные для передвижения места закрашены цветом #000000FF (полностью чёрный и непрозрачный).
    			Может отсутствовать, тогда персонаж может ходить где угодно.
    no_pictures - строка, обозначающая отсутствие картинок:
    	Должна содержать букву 'o', если нет over.png, и 'f', если нет free.png.

Регистрация места в локации:
$ register_place("location_name", "place_name", x, y)
Где location_name - имя локации,
    place_name - имя места,
    x и y - координаты (числа, без кавычек) места в локации (в пикселях).

Регистрация выхода из локации:
$ register_exit("location_name", "to_location_name", "to_place_name", x, y)
Где location_name - имя локации, в которой располагается выход,
    to_location_name - имя локации, в которую будет произведён переход,
    to_place_name - имя места, в которое будет произведён переход,
    x и y - координаты (числа, без кавычек) места в локации (в пикселях).

# Пока не реализовано.
Добавление фоновых звуков в локацию (пение птиц, нажатие на клавиатуру и т. д.):
$ add_ambience("location_name", ambience_name)
Где location_name - имя локации, в которую добавляется фоновый звук,
    ambience_name - имя проигрываемого файла.

Регистрация персонажей:
$ character.make_rpg("prefix_path_to_image", "dress")
Где character - персонаж, который уже создан (nc = Character("NewCharacter", color="0x0000FF")),
    prefix_path_to_image - часть пути к картинке 240x384, на которой в 4 ряда (строки) расположены 5 кадров (столбцы) на каждый поворот:
    	Кадры:
	    	1, 2, 3, 4 - ходьба/бег,
	    	2, 4 - стойка,
	    	5 - сидячее положение.
	    Ряды:
	    	{1, 2, 3, 4} - соответственно {на нас, налево, направо, от нас}.
	dress - Начальная одежда.
	    
    Целый путь до картинки вычисляется как prefix_path_to_image + dress + '.png'.
    Где dress - одежда на персонаже ('pi', 'sw' и т. д.), задаваемая функцией set_dress.

Отображение персонажа character в текущей локации в месте place_name:
$ show_character(character, "place_name")

Скрытие персонажа character на карте:
$ hide_character(character)

В любом месте сценария:
	cur_location_name будет являться названием текущей локации,
	cur_place_name - названием текущего места в ней (или None, если игрок слишком далеко от всех зарегистрированных мест).

Перед переходом на какую-либо локацию выполняется функция can_exit_to(to_location_name, to_place_name).
	to_location_name - имя локации, в которую осуществляется переход,
	to_place_name - имя места в этой локации.
Если она возвращает True - переход осуществляется, иначе - нет.

После перехода в локацию выполняется метка on_change_location.
При перемещение в зону определённого места в локации, зарегистрированного с помощью register_place выполняется on_change_place.
Хотя это и нестандартный (в некотором роде) функционал, но его несложно добавить, см. main.rpy в демке.
Там (в демке) внутри on_change_location сделан вызов (call) метки on__LOCNAME (где LOCNAME - имя локации, в которую перешли), а внутри on_change_place - вызов dayDAYNUM__LOCNAME__PLACENAME (где DAYNUM - номер дня в игре, а PLACENAME - имя места, в котором оказались).
Если метки с таким именем не существует - ничего не делается.
Разумеется, вы можете изменить это поведение (в том числе и формат меток), а не копировать всё в точности.


Принудительное передвижение персонажа:
$ character.move_to_place("place_name", is_run = False, end_stop_time = -1)
Где character - персонаж,
    place_name - название места, в которое он передвигается,
    is_run - True (если бежит) или False (если идёт).
    exec_stop_time - время (в сек.), на которое выполнение сценария ставится на паузу.
    	Если меньше 0 (по-умолчанию), то пауза продлится до тех пор, пока персонаж не дойдёт до нужного места.
    	Если больше или равно 0, то пауза продлится указанное время:
    		Если время уже вышло, а персонаж ещё не дошёл, то происходит переход к следующей команде,
    		Если время ещё не вышло, а персонаж уже дошёл до конца, то пауза всё равно продлится указанное время.

Поворот персонажа:
$ character.set_direction(direction)
Где character - персонаж,
    direction - направление: to_forward (от нас), to_back (на нас), to_left(влево), to_right(вправо):
    	На самом деле direction - число, а {to_forward, to_back, to_left, to_right} - переменные, равные {3, 0, 1, 2} соответственно
    	Но использовать напрямую числа вместо переменных не рекомендуется:
    		В будущем цифры могут быть изменены, тогда как имена переменных останутся прежними.

Смена положения:
$ character.set_pose("pose")
Где character - персонаж,
    pose - поза, допустимы:
    	"sit" - сидеть,
    	"stance" - стоять.

Смена одежды на "need_dress":
$ character.set_dress("need_dress")

Сказать камере следить не за ГГ, а за другим персонажем/местом в локации:
$ cam_to(obj)
Где obj - персонаж, за которым будет следовать камера,
	или имя места в текущей локации, за которым будет вестись наблюдение.

Вернуть камеру на следование за ГГ, если что, можно так:
$ cam_to(me)
Что, вроде, логично.

Регистрация объекта для отображения в локации:
$ register_map_object("obj_name", "path_to_image")
Где obj_name - название регистрируемого объекта, который будет отображаться в локации,
    path_to_image - путь к изображению.

Добавление объекта в локацию:
set_map_object("obj_name", "place_name")
Где obj_name - название зарегистрированного (с помощью register_map_object) объекта, который будет отображаться в локации,
    place_name - имя места в локации, в которое будет поставлен объект.

Удаление объекта с именем "obj_name" с локации:
hide_map_object("obj_name")
Все объекты автоматически удаляются при переключении на другую локацию.

